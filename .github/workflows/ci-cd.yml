name: Fabric Management CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  VERSION: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean verify    # Maven Wrapper yerine doğrudan mvn kullan

      - name: Run Tests
        run: mvn test           # Maven Wrapper yerine doğrudan mvn kullan

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build and push API Gateway
        uses: docker/build-push-action@v4
        with:
          context: ./infrastructure/api-gateway  # Güncellenen yol
          push: true
          tags: ${{ env.REGISTRY }}/fabric/api-gateway:${{ env.VERSION }},${{ env.REGISTRY }}/fabric/api-gateway:latest

      - name: Build and push Auth Service
        uses: docker/build-push-action@v4
        with:
          context: ./domains/identity/auth-service  # Güncellenen yol
          push: true
          tags: ${{ env.REGISTRY }}/fabric/auth-service:${{ env.VERSION }},${{ env.REGISTRY }}/fabric/auth-service:latest

    # Diğer servisler için benzer adımlar ekleyin

  deploy-dev:
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Set Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_DEV }}

      - name: Deploy to development
        run: |
          # Kubernetes manifestlerinde imaj versiyonlarını güncelle
          find infrastructure/kubernetes/deployments -type f -name "*.yaml" -exec sed -i "s|\${REGISTRY}|${{ env.REGISTRY }}|g" {} \;
          find infrastructure/kubernetes/deployments -type f -name "*.yaml" -exec sed -i "s|\${VERSION}|${{ env.VERSION }}|g" {} \;
          
          # Kubernetes manifestlerini uygula
          kubectl apply -f infrastructure/kubernetes/config-maps/
          kubectl apply -f infrastructure/kubernetes/secrets/
          kubectl apply -f infrastructure/kubernetes/deployments/
          kubectl apply -f infrastructure/kubernetes/ingress/