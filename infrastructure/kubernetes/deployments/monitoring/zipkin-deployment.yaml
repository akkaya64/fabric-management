apiVersion: apps/v1
kind: Deployment
metadata:
  name: zipkin
  namespace: fabric
  labels:
    app: zipkin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zipkin
  template:
    metadata:
      labels:
        app: zipkin
    spec:
      containers:
        - name: zipkin
          image: openzipkin/zipkin:latest
          ports:
            - containerPort: 9411
          env:
            - name: STORAGE_TYPE
              value: "mem"  # Bellek içinde depolama (Production için elasticsearch veya cassandra tercih edilir)
            - name: JAVA_OPTS
              value: "-Xms512m -Xmx512m"
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 9411
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 9411
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: zipkin
  namespace: fabric
  labels:
    app: zipkin
spec:
  selector:
    app: zipkin
  ports:
    - port: 9411
      targetPort: 9411
  type: ClusterIP
---
# Elasticsearch için opsiyonel deployment (Üretim ortamı için)
# Zipkin'in Elasticsearch ile çalışacak şekilde yapılandırılması
# Not: Bu bölüm yoğun kaynak kullanır, sadece üretim ortamı için düşünülmelidir
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: fabric
  labels:
    app: elasticsearch
  annotations:
    # Bellek ayarları için
    co.elastic.logs/module: elasticsearch
spec:
  replicas: 1
  serviceName: elasticsearch
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
          securityContext:
            privileged: true
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
        - name: increase-vm-max-map
          image: busybox
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
        - name: increase-fd-ulimit
          image: busybox
          command: ["sh", "-c", "ulimit -n 65536"]
          securityContext:
            privileged: true
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
          ports:
            - containerPort: 9200
              name: http
            - containerPort: 9300
              name: transport
          env:
            - name: cluster.name
              value: zipkin-elasticsearch
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.type
              value: single-node
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: http
            initialDelaySeconds: 20
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: http
            initialDelaySeconds: 120
            timeoutSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: fabric
  labels:
    app: elasticsearch
spec:
  selector:
    app: elasticsearch
  ports:
    - port: 9200
      name: http
      targetPort: 9200
    - port: 9300
      name: transport
      targetPort: 9300
  type: ClusterIP
---
# Zipkin'in Elasticsearch ile yapılandırılması
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zipkin-elasticsearch
  namespace: fabric
  labels:
    app: zipkin-elasticsearch
  annotations:
    co.elastic.logs/module: zipkin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zipkin-elasticsearch
  template:
    metadata:
      labels:
        app: zipkin-elasticsearch
    spec:
      containers:
        - name: zipkin
          image: openzipkin/zipkin:latest
          ports:
            - containerPort: 9411
          env:
            - name: STORAGE_TYPE
              value: "elasticsearch"
            - name: ES_HOSTS
              value: "http://elasticsearch:9200"
            - name: ES_INDEX
              value: "zipkin"
            - name: ES_INDEX_SHARDS
              value: "1"
            - name: ES_INDEX_REPLICAS
              value: "0"
            - name: JAVA_OPTS
              value: "-Xms512m -Xmx512m"
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 9411
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 9411
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: zipkin-elasticsearch
  namespace: fabric
  labels:
    app: zipkin-elasticsearch
spec:
  selector:
    app: zipkin-elasticsearch
  ports:
    - port: 9411
      targetPort: 9411
  type: ClusterIP