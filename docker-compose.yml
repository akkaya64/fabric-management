version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: fabric
      POSTGRES_PASSWORD: fabric123
      POSTGRES_DB: fabric
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - fabric-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fabric"]
      interval: 10s
      timeout: 5s
      retries: 5

  consul:
    image: hashicorp/consul:latest
    command: agent -server -ui -bootstrap-expect=1 -client=0.0.0.0
    volumes:
      - consul-data:/consul/data
    networks:
      - fabric-network
    healthcheck:
      test: ["CMD", "consul members"]
      interval: 10s
      timeout: 5s
      retries: 3

  auth-service:
    build:
      context: ./services/identity/auth-service
      dockerfile: Dockerfile
    image: fabric-auth-service:dev
    ports:
      - "8081:8081"
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      consul:
        condition: service_healthy
    networks:
      - fabric-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  user-service:
    build:
      context: ./services/identity/user-service
      dockerfile: Dockerfile
    image: fabric-user-service:dev
    ports:
      - "8082:8082"
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      consul:
        condition: service_healthy
    networks:
      - fabric-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  fabric-network:
    driver: bridge

volumes:
  postgres-data:
  consul-data: